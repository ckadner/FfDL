# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.resource_meta import ResourceMeta  # noqa: F401,E501
from swagger_server.models.training_resource_entity import TrainingResourceEntity  # noqa: F401,E501
from swagger_server import util


class TrainingResource(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, metadata: ResourceMeta=None, entity: TrainingResourceEntity=None):  # noqa: E501
        """TrainingResource - a model defined in Swagger

        :param metadata: The metadata of this TrainingResource.  # noqa: E501
        :type metadata: ResourceMeta
        :param entity: The entity of this TrainingResource.  # noqa: E501
        :type entity: TrainingResourceEntity
        """
        self.swagger_types = {
            'metadata': ResourceMeta,
            'entity': TrainingResourceEntity
        }

        self.attribute_map = {
            'metadata': 'metadata',
            'entity': 'entity'
        }

        self._metadata = metadata
        self._entity = entity

    @classmethod
    def from_dict(cls, dikt) -> 'TrainingResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The training_resource of this TrainingResource.  # noqa: E501
        :rtype: TrainingResource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata(self) -> ResourceMeta:
        """Gets the metadata of this TrainingResource.


        :return: The metadata of this TrainingResource.
        :rtype: ResourceMeta
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: ResourceMeta):
        """Sets the metadata of this TrainingResource.


        :param metadata: The metadata of this TrainingResource.
        :type metadata: ResourceMeta
        """

        self._metadata = metadata

    @property
    def entity(self) -> TrainingResourceEntity:
        """Gets the entity of this TrainingResource.


        :return: The entity of this TrainingResource.
        :rtype: TrainingResourceEntity
        """
        return self._entity

    @entity.setter
    def entity(self, entity: TrainingResourceEntity):
        """Sets the entity of this TrainingResource.


        :param entity: The entity of this TrainingResource.
        :type entity: TrainingResourceEntity
        """

        self._entity = entity
