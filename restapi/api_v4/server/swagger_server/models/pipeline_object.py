# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.node_parameters_object import NodeParametersObject  # noqa: F401,E501
from swagger_server.models.pipeline_object_data_bindings import PipelineObjectDataBindings  # noqa: F401,E501
from swagger_server import util


class PipelineObject(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, url: str=None, data_bindings: List[PipelineObjectDataBindings]=None, nodes_parameters: NodeParametersObject=None):  # noqa: E501
        """PipelineObject - a model defined in Swagger

        :param url: The url of this PipelineObject.  # noqa: E501
        :type url: str
        :param data_bindings: The data_bindings of this PipelineObject.  # noqa: E501
        :type data_bindings: List[PipelineObjectDataBindings]
        :param nodes_parameters: The nodes_parameters of this PipelineObject.  # noqa: E501
        :type nodes_parameters: NodeParametersObject
        """
        self.swagger_types = {
            'url': str,
            'data_bindings': List[PipelineObjectDataBindings],
            'nodes_parameters': NodeParametersObject
        }

        self.attribute_map = {
            'url': 'url',
            'data_bindings': 'data_bindings',
            'nodes_parameters': 'nodes_parameters'
        }

        self._url = url
        self._data_bindings = data_bindings
        self._nodes_parameters = nodes_parameters

    @classmethod
    def from_dict(cls, dikt) -> 'PipelineObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The pipeline_object of this PipelineObject.  # noqa: E501
        :rtype: PipelineObject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self) -> str:
        """Gets the url of this PipelineObject.


        :return: The url of this PipelineObject.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this PipelineObject.


        :param url: The url of this PipelineObject.
        :type url: str
        """

        self._url = url

    @property
    def data_bindings(self) -> List[PipelineObjectDataBindings]:
        """Gets the data_bindings of this PipelineObject.


        :return: The data_bindings of this PipelineObject.
        :rtype: List[PipelineObjectDataBindings]
        """
        return self._data_bindings

    @data_bindings.setter
    def data_bindings(self, data_bindings: List[PipelineObjectDataBindings]):
        """Sets the data_bindings of this PipelineObject.


        :param data_bindings: The data_bindings of this PipelineObject.
        :type data_bindings: List[PipelineObjectDataBindings]
        """

        self._data_bindings = data_bindings

    @property
    def nodes_parameters(self) -> NodeParametersObject:
        """Gets the nodes_parameters of this PipelineObject.


        :return: The nodes_parameters of this PipelineObject.
        :rtype: NodeParametersObject
        """
        return self._nodes_parameters

    @nodes_parameters.setter
    def nodes_parameters(self, nodes_parameters: NodeParametersObject):
        """Sets the nodes_parameters of this PipelineObject.


        :param nodes_parameters: The nodes_parameters of this PipelineObject.
        :type nodes_parameters: NodeParametersObject
        """

        self._nodes_parameters = nodes_parameters
