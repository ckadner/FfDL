# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.url_object import UrlObject  # noqa: F401,E501
from swagger_server import util


class Pagination(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, first: UrlObject=None, next: UrlObject=None, limit: float=None):  # noqa: E501
        """Pagination - a model defined in Swagger

        :param first: The first of this Pagination.  # noqa: E501
        :type first: UrlObject
        :param next: The next of this Pagination.  # noqa: E501
        :type next: UrlObject
        :param limit: The limit of this Pagination.  # noqa: E501
        :type limit: float
        """
        self.swagger_types = {
            'first': UrlObject,
            'next': UrlObject,
            'limit': float
        }

        self.attribute_map = {
            'first': 'first',
            'next': 'next',
            'limit': 'limit'
        }

        self._first = first
        self._next = next
        self._limit = limit

    @classmethod
    def from_dict(cls, dikt) -> 'Pagination':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The pagination of this Pagination.  # noqa: E501
        :rtype: Pagination
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first(self) -> UrlObject:
        """Gets the first of this Pagination.


        :return: The first of this Pagination.
        :rtype: UrlObject
        """
        return self._first

    @first.setter
    def first(self, first: UrlObject):
        """Sets the first of this Pagination.


        :param first: The first of this Pagination.
        :type first: UrlObject
        """

        self._first = first

    @property
    def next(self) -> UrlObject:
        """Gets the next of this Pagination.


        :return: The next of this Pagination.
        :rtype: UrlObject
        """
        return self._next

    @next.setter
    def next(self, next: UrlObject):
        """Sets the next of this Pagination.


        :param next: The next of this Pagination.
        :type next: UrlObject
        """

        self._next = next

    @property
    def limit(self) -> float:
        """Gets the limit of this Pagination.


        :return: The limit of this Pagination.
        :rtype: float
        """
        return self._limit

    @limit.setter
    def limit(self, limit: float):
        """Sets the limit of this Pagination.


        :param limit: The limit of this Pagination.
        :type limit: float
        """

        self._limit = limit
