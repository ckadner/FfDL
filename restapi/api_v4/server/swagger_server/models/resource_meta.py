# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.resource_meta_parent import ResourceMetaParent  # noqa: F401,E501
from swagger_server import util


class ResourceMeta(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, guid: str=None, url: str=None, created_at: datetime=None, modified_at: datetime=None, parent: ResourceMetaParent=None):  # noqa: E501
        """ResourceMeta - a model defined in Swagger

        :param guid: The guid of this ResourceMeta.  # noqa: E501
        :type guid: str
        :param url: The url of this ResourceMeta.  # noqa: E501
        :type url: str
        :param created_at: The created_at of this ResourceMeta.  # noqa: E501
        :type created_at: datetime
        :param modified_at: The modified_at of this ResourceMeta.  # noqa: E501
        :type modified_at: datetime
        :param parent: The parent of this ResourceMeta.  # noqa: E501
        :type parent: ResourceMetaParent
        """
        self.swagger_types = {
            'guid': str,
            'url': str,
            'created_at': datetime,
            'modified_at': datetime,
            'parent': ResourceMetaParent
        }

        self.attribute_map = {
            'guid': 'guid',
            'url': 'url',
            'created_at': 'created_at',
            'modified_at': 'modified_at',
            'parent': 'parent'
        }

        self._guid = guid
        self._url = url
        self._created_at = created_at
        self._modified_at = modified_at
        self._parent = parent

    @classmethod
    def from_dict(cls, dikt) -> 'ResourceMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The resource_meta of this ResourceMeta.  # noqa: E501
        :rtype: ResourceMeta
        """
        return util.deserialize_model(dikt, cls)

    @property
    def guid(self) -> str:
        """Gets the guid of this ResourceMeta.


        :return: The guid of this ResourceMeta.
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid: str):
        """Sets the guid of this ResourceMeta.


        :param guid: The guid of this ResourceMeta.
        :type guid: str
        """
        if guid is None:
            raise ValueError("Invalid value for `guid`, must not be `None`")  # noqa: E501

        self._guid = guid

    @property
    def url(self) -> str:
        """Gets the url of this ResourceMeta.


        :return: The url of this ResourceMeta.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this ResourceMeta.


        :param url: The url of this ResourceMeta.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")  # noqa: E501

        self._url = url

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this ResourceMeta.


        :return: The created_at of this ResourceMeta.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this ResourceMeta.


        :param created_at: The created_at of this ResourceMeta.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def modified_at(self) -> datetime:
        """Gets the modified_at of this ResourceMeta.


        :return: The modified_at of this ResourceMeta.
        :rtype: datetime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at: datetime):
        """Sets the modified_at of this ResourceMeta.


        :param modified_at: The modified_at of this ResourceMeta.
        :type modified_at: datetime
        """

        self._modified_at = modified_at

    @property
    def parent(self) -> ResourceMetaParent:
        """Gets the parent of this ResourceMeta.


        :return: The parent of this ResourceMeta.
        :rtype: ResourceMetaParent
        """
        return self._parent

    @parent.setter
    def parent(self, parent: ResourceMetaParent):
        """Sets the parent of this ResourceMeta.


        :param parent: The parent of this ResourceMeta.
        :type parent: ResourceMetaParent
        """

        self._parent = parent
