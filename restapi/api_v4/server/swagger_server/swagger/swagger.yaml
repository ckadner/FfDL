---
swagger: "2.0"
info:
  description: "## Authorization\n\nStep by step instruction how to use Watson Machine\
    \ Learning service\ncan be found [here](https://console.ng.bluemix.net/docs/services/PredictiveModeling/using_pm_service_dsx.html#using_pm_service_dsx)\n\
    \n### IBM Watson Machine Learning Credentials\n\nTo start working with API one\
    \ needs to generate an `access token` using the `username` and `password`\navailable\
    \ on the Service Credentials tab of the IBM Watson Machine Learning service instance\
    \ or also available in the VCAP environment variable.\n\nExample of the Service\
    \ Credentials:\n\n```json\n{\n    \"url\": \"https://us-south.ml.cloud.ibm.com\"\
    ,\n    \"access_key\": \"ERY9vcBfE4sE+F4g8hcotF9L+j81WXWeZv\",\n    \"username\"\
    : \"c1ef4b80-2ee2-458e-ab92-e9ca97ec657d\",\n    \"password\": \"030528d4-5a3e-4d4c-9258-5d553513be6f\"\
    ,\n    \"instance_id\": \"a751c209-954e-dc32-b441-ad56ce7a9f40\"\n}\n```\n\nExample\
    \ of obtaining `access token` from Token Endpoint using HTTP Basic Auth (for details\
    \ please refer to Token section below):\n\n`\ncurl --basic --user username:password\
    \ https://us-south.ml.cloud.ibm.com/v4/identity/token\n`\n\nThe obtained `access\
    \ token` needs to be prepended with `Bearer` word and it needs to be passed in\
    \ the `Authorization` header for API calls.\n\nExample of API request with `Bearer\
    \ access token`:\n\n`\ncurl https://us-south.ml.cloud.ibm.com/v4/models -H \"\
    Authorization: Bearer eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJ0ZW5hbnRJZCI6ImU4YmQzZGM3LWI5Y2UtNDY1OC1iZ...\"\
    \n`\n"
  version: "4.x.y"
  title: "IBM Watson Machine Learning API"
host: "us-south.ml.cloud.ibm.com"
basePath: "/"
tags:
- name: "Models"
- name: "Pipelines"
- name: "Experiments"
- name: "Deployments"
- name: "Libraries"
- name: "Runtimes"
- name: "Functions"
schemes:
- "https"
security:
- MLToken: []
paths:
  /v4/trainings:
    get:
      tags:
      - "Training"
      summary: "Get the list of all trainings"
      description: "Get the list of all trainings"
      operationId: "v4_trainings_get"
      parameters:
      - name: "start"
        in: "query"
        description: "Token required for token-based pagination. This token cannot\
          \ be determined by end user. It is generated by the service and it is set\
          \ in the url available in the `next` field."
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "How many resources should be returned. By default limit is 100.\
          \ Max limit allowed is 1000."
        required: false
        type: "number"
      - name: "tag_value"
        in: "query"
        description: "Return only the resources with the given tag value"
        required: false
        type: "string"
      - name: "type"
        in: "query"
        description: "Filter based on 'pipeline' or 'experiment' trainings. Example:\
          \ type=pipeline. If not provided, returns all the trainings"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/training_resources"
        401:
          description: "Error"
          schema:
            $ref: "#/definitions/error_auth"
        404:
          description: "Error"
          schema:
            $ref: "#/definitions/error_not_found"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/error_internal_server_error"
      x-swagger-router-controller: "swagger_server.controllers.training_controller"
    post:
      tags:
      - "Training"
      summary: "Create a new Machine Learning training"
      description: "Create a new Machine Learning training"
      operationId: "v4_trainings_post"
      parameters:
      - in: "body"
        name: "payload"
        required: false
        schema:
          $ref: "#/definitions/training_resource_entity_request"
      responses:
        202:
          description: "The training was started asynchronously"
          schema:
            $ref: "#/definitions/training_resource"
        400:
          description: "Error"
          schema:
            $ref: "#/definitions/error_bad_request"
        401:
          description: "Error"
          schema:
            $ref: "#/definitions/error_auth"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/error_internal_server_error"
      x-swagger-router-controller: "swagger_server.controllers.training_controller"
  /v4/trainings/{training_id}:
    get:
      tags:
      - "Training"
      summary: "Get the training status"
      description: "Get the training status. This call supported Web-Socket upgrade.\
        \ However in order to preserve bandwidth, web-socket messages are not context\
        \ complete. Meaning that a single web-socket message only reflects a message\
        \ or metric happening in the context of a training job or sub-job (in case\
        \ of experiment trainings or HPO/AutoML trainings). Hence the metadata property\
        \ of a web-socket message contains a parent with the url information of the\
        \ parent job that triggered this partibular job. Also the metrics will be\
        \ provided as they arrive from the backend runtime, and not as a cumulative\
        \ list. In order to get the full view of the running training job the caller\
        \ should do a regular GET call."
      operationId: "v4_trainings_training_id_get"
      parameters:
      - name: "training_id"
        in: "path"
        description: "training identifier"
        required: true
        type: "string"
      responses:
        101:
          description: "In case of web socket upgrade, the service messages emitted\
            \ have the following shape."
          schema:
            $ref: "#/definitions/training_websocket"
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/training_resource"
        401:
          description: "Error"
          schema:
            $ref: "#/definitions/error_auth"
        404:
          description: "Error"
          schema:
            $ref: "#/definitions/error_not_found"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/error_internal_server_error"
      x-swagger-router-controller: "swagger_server.controllers.training_controller"
    delete:
      tags:
      - "Training"
      summary: "Cancel an ongoing training."
      description: "Cancel an ongoing training and remove it."
      operationId: "v4_trainings_training_id_delete"
      parameters:
      - name: "training_id"
        in: "path"
        description: "training identifier"
        required: true
        type: "string"
      responses:
        204:
          description: "training cancelled"
        401:
          description: "Error"
          schema:
            $ref: "#/definitions/error_auth"
        404:
          description: "Error"
          schema:
            $ref: "#/definitions/error_not_found"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/error_internal_server_error"
      x-swagger-router-controller: "swagger_server.controllers.training_controller"
securityDefinitions:
  basicAuth:
    description: "To start working with API one needs to generate an access token\
      \ using the username and password\n  available on the Service Credentials tab\
      \ of the IBM Watson Machine Learning service instance\n  or also available in\
      \ the VCAP environment variable.\n"
    type: "basic"
  MLToken:
    description: "You can authorize using access token (obtained from the token endpoint)\n\
      \  to every WML REST API endpoint. The access token needs to be prepended with\
      \ \"Bearer\" word.\n"
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  training_websocket:
    type: "object"
    properties:
      metadata:
        $ref: "#/definitions/resource_meta"
      entity:
        $ref: "#/definitions/status"
  training_resource_entity_request:
    type: "object"
    required:
    - "results_reference"
    - "training_data_references"
    properties:
      tags:
        $ref: "#/definitions/tags"
      experiment:
        $ref: "#/definitions/experiment_object"
      pipeline:
        $ref: "#/definitions/pipeline_object"
      training_data_references:
        type: "array"
        items:
          $ref: "#/definitions/data_reference"
      results_reference:
        $ref: "#/definitions/object_location"
  experiment_object:
    type: "object"
    properties:
      url:
        type: "string"
        format: "url"
  pipeline_object:
    type: "object"
    properties:
      url:
        type: "string"
        format: "url"
      data_bindings:
        type: "array"
        items:
          $ref: "#/definitions/pipeline_object_data_bindings"
      nodes_parameters:
        $ref: "#/definitions/node_parameters_object"
  node_parameters_object:
    type: "array"
    items:
      $ref: "#/definitions/node_parameters_object_inner"
  status:
    type: "object"
    required:
    - "state"
    properties:
      running_at:
        type: "string"
        format: "date-time"
        example: "2017-01-30T10:11:12Z"
      finished_at:
        type: "string"
        format: "date-time"
        example: "2017-01-30T10:11:12Z"
      iteration:
        type: "number"
        example: 10.0
      total_iterations:
        type: "number"
        example: 100.0
      state:
        type: "string"
        enum:
        - "queued"
        - "pending"
        - "running"
        - "storing"
        - "completed"
        - "failed"
        - "canceled"
      message:
        $ref: "#/definitions/status_message"
      metrics:
        $ref: "#/definitions/metrics"
      failure:
        $ref: "#/definitions/error"
  training_resource_entity:
    allOf:
    - $ref: "#/definitions/training_resource_entity_request"
    - type: "object"
      properties:
        status:
          $ref: "#/definitions/status"
        sub_trainings:
          type: "array"
          items:
            $ref: "#/definitions/training_resource"
  training_resource:
    type: "object"
    properties:
      metadata:
        $ref: "#/definitions/resource_meta"
      entity:
        $ref: "#/definitions/training_resource_entity"
    example:
      metadata:
        guid: "53dc4cf1-252f-424b-b52d-5cdd9814987f"
        url: "{baseUrl}/v4/trainings/53dc4cf1-252f-424b-b52d-5cdd9814987f"
        created_at: "2018-09-09T10:11:12Z"
      entity: ""
  training_resources:
    allOf:
    - $ref: "#/definitions/pagination"
    - type: "object"
      properties:
        resources:
          type: "array"
          items:
            $ref: "#/definitions/training_resource"
  pagination:
    type: "object"
    properties:
      first:
        $ref: "#/definitions/url_object"
      next:
        $ref: "#/definitions/url_object"
      limit:
        type: "number"
        example: 10.0
  url_object:
    type: "object"
    properties:
      url:
        type: "string"
  resource_meta:
    type: "object"
    required:
    - "guid"
    - "url"
    properties:
      guid:
        type: "string"
      url:
        type: "string"
        format: "uri"
      created_at:
        type: "string"
        format: "date-time"
      modified_at:
        type: "string"
        format: "date-time"
      parent:
        $ref: "#/definitions/resource_meta_parent"
    example:
      guid: "53dc4cf1-252f-424b-b52d-5cdd9814987f"
      url: "{baseUrl}/v4/trainings/53dc4cf1-252f-424b-b52d-5cdd9814987f"
      created_at: "2018-09-09T10:11:12Z"
  error:
    type: "object"
    required:
    - "errors"
    - "trace"
    properties:
      trace:
        type: "string"
        example: "w7vrpmm9479z2o0hxhex0ttgat4qv9ev"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/error_errors"
  error_bad_request:
    type: "object"
    required:
    - "errors"
    - "trace"
    properties:
      trace:
        type: "string"
        example: "w7vrpmm9479z2o0hxhex0ttgat4qv9ev"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/error_bad_request_errors"
  error_not_found:
    type: "object"
    required:
    - "errors"
    - "trace"
    properties:
      trace:
        type: "string"
        example: "w8vrpmm9479z2o0hxhex0ttgat4qv9ev"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/error_not_found_errors"
  error_internal_server_error:
    type: "object"
    required:
    - "errors"
    - "trace"
    properties:
      trace:
        type: "string"
        example: "w9vrpmm9479z2o0hxhex0ttgat4qv9ev"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/error_internal_server_error_errors"
  data_reference:
    allOf:
    - $ref: "#/definitions/object_location"
    - type: "object"
      properties:
        schema:
          type: "object"
          description: "https://api.dataplatform.cloud.ibm.com/schemas/common-pipeline/datarecord-metadata/datarecord-metadata-v2-schema.json"
          properties: {}
  object_location:
    type: "object"
    required:
    - "connection"
    - "location"
    - "type"
    properties:
      name:
        type: "string"
      type:
        type: "string"
        description: "The data source type like COS or dashDB. Allowed values for\
          \ type are 's3' for COS and 'dashdb' for dashDB"
      connection:
        type: "object"
        example:
          endpoint_url: "https://s3-api.dal-us-geo.objectstorage.softlayer.net"
          access_key_id: "string"
          secret_access_key: "string"
        properties: {}
      location:
        type: "object"
        example:
          bucket: "bucket"
          path: "path"
        description: "For sentiment models, path will be hybrid pipeline id e.g.4cedab6d-e8e4-4214-b81a-2ddb122db2ab.\
          \ For DL models, path will be training directory name e.g. training-ZZaQeX7mR"
        properties: {}
  metrics:
    type: "array"
    items:
      $ref: "#/definitions/metrics_inner"
  tags:
    type: "array"
    items:
      $ref: "#/definitions/tags_inner"
  error_auth:
    type: "object"
    required:
    - "errors"
    - "trace"
    properties:
      trace:
        type: "string"
        example: "w8vrpmm9479z2o0hxhex0ttgat4qv9ev"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/error_auth_errors"
  pipeline_object_data_bindings:
    properties:
      data_reference_name:
        type: "string"
        description: "the input_data_reference name that is the input for the node\
          \ identified by node_id"
      node_id:
        type: "string"
        description: "the id of the pipeline node that will receive the associated\
          \ input_data_reference input"
  node_parameters_object_inner:
    properties:
      node_id:
        type: "string"
      parameters:
        type: "object"
        properties: {}
  status_message:
    properties:
      level:
        type: "string"
      text:
        type: "string"
  resource_meta_parent:
    properties:
      url:
        type: "string"
  error_errors:
    properties:
      code:
        type: "string"
        example: "missing_field"
      message:
        type: "string"
        example: "The `first_name` field is required."
      more_info:
        type: "string"
        example: "https://docs.api.bluemix.net/v4/users/create_user#first_name"
  error_bad_request_target:
    required:
    - "name"
    - "type"
    properties:
      type:
        type: "string"
        example: "field"
      name:
        type: "string"
        example: "`field`"
  error_bad_request_errors:
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "string"
        example: "invalid_input"
      message:
        type: "string"
        example: "Invalid `field` specified"
      target:
        $ref: "#/definitions/error_bad_request_target"
  error_not_found_errors:
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "string"
        example: "not_found"
      message:
        type: "string"
        example: "Requested object could not be found."
  error_internal_server_error_errors:
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "string"
        example: "internal_server_error"
      message:
        type: "string"
        example: "Internal server error occurred while performing the action"
  metrics_inner:
    properties:
      timestamp:
        type: "string"
        format: "date-time"
        example: "2018-12-01T10:11:12Z"
      iteration:
        type: "number"
      phase:
        type: "string"
        enum:
        - "evaluation"
        - "training"
      machine_learning_metrics:
        type: "object"
        example:
          loss: 0.679798743
          learning_rate: 0.082342
        properties: {}
  tags_inner:
    required:
    - "value"
    properties:
      value:
        type: "string"
      description:
        type: "string"
  error_auth_errors:
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "string"
        example: "authorization_rejected"
      message:
        type: "string"
parameters:
  sparkServiceInstanceHeader:
    name: "X-Spark-Service-Instance"
    in: "header"
    description: "Spark instance (see introduction)\n"
    required: true
    type: "string"
    format: "byte"
  sparkServiceInstanceOptionalHeader:
    name: "X-Spark-Service-Instance"
    in: "header"
    description: "Spark instance (see introduction). This value is optional.\nIf not\
      \ specified the spark instance preset for the model deployment whould be used.\n"
    required: false
    type: "string"
    format: "byte"
  sparkServiceInstanceOptionalForOnlineHeader:
    name: "X-Spark-Service-Instance"
    in: "header"
    description: "Spark instance (see introduction). This value is required for batch\
      \ and stream deployments.\nIt is omitted for online deployments. Functionality\
      \ of creating 'stream' and 'batch' deployments is currenly in beta.\n"
    required: false
    type: "string"
    format: "byte"
