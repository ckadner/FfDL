import connexion
import six

from swagger_server.models.error_auth import ErrorAuth  # noqa: E501
from swagger_server.models.error_bad_request import ErrorBadRequest  # noqa: E501
from swagger_server.models.error_internal_server_error import ErrorInternalServerError  # noqa: E501
from swagger_server.models.error_not_found import ErrorNotFound  # noqa: E501
from swagger_server.models.training_resource import TrainingResource  # noqa: E501
from swagger_server.models.training_resource_entity_request import TrainingResourceEntityRequest  # noqa: E501
from swagger_server.models.training_resources import TrainingResources  # noqa: E501
from swagger_server.models.training_websocket import TrainingWebsocket  # noqa: E501
from swagger_server import util


def v4_trainings_get(start=None, limit=None, tag_value=None, type=None):  # noqa: E501
    """Get the list of all trainings

    Get the list of all trainings # noqa: E501

    :param start: Token required for token-based pagination. This token cannot be determined by end user. It is generated by the service and it is set in the url available in the &#x60;next&#x60; field.
    :type start: str
    :param limit: How many resources should be returned. By default limit is 100. Max limit allowed is 1000.
    :type limit: 
    :param tag_value: Return only the resources with the given tag value
    :type tag_value: str
    :param type: Filter based on &#39;pipeline&#39; or &#39;experiment&#39; trainings. Example: type&#x3D;pipeline. If not provided, returns all the trainings
    :type type: str

    :rtype: TrainingResources
    """
    return 'do some magic!'


def v4_trainings_post(payload=None):  # noqa: E501
    """Create a new Machine Learning training

    Create a new Machine Learning training # noqa: E501

    :param payload: 
    :type payload: dict | bytes

    :rtype: TrainingResource
    """
    if connexion.request.is_json:
        payload = TrainingResourceEntityRequest.from_dict(connexion.request.get_json())  # noqa: E501
    return 'do some magic!'


def v4_trainings_training_id_delete(training_id):  # noqa: E501
    """Cancel an ongoing training.

    Cancel an ongoing training and remove it. # noqa: E501

    :param training_id: training identifier
    :type training_id: str

    :rtype: None
    """
    return 'do some magic!'


def v4_trainings_training_id_get(training_id):  # noqa: E501
    """Get the training status

    Get the training status. This call supported Web-Socket upgrade. However in order to preserve bandwidth, web-socket messages are not context complete. Meaning that a single web-socket message only reflects a message or metric happening in the context of a training job or sub-job (in case of experiment trainings or HPO/AutoML trainings). Hence the metadata property of a web-socket message contains a parent with the url information of the parent job that triggered this partibular job. Also the metrics will be provided as they arrive from the backend runtime, and not as a cumulative list. In order to get the full view of the running training job the caller should do a regular GET call. # noqa: E501

    :param training_id: training identifier
    :type training_id: str

    :rtype: TrainingResource
    """
    return 'do some magic!'
